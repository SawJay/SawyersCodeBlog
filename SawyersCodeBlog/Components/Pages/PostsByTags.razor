@page "/tag/{tagId:int}"
@using SawyersCodeBlog.Client.Components.UI.BlogPosts
@using SawyersCodeBlog.Client.Models
@using SawyersCodeBlog.Client.Services.Interfaces
@using SawyersCodeBlog.Components.Layout
@inject ICategoryDTOService CategoryService
@inject IBlogPostDTOService BlogPostService
@inject NavigationManager Nav
@layout SidebarLayout

@if (tag is not null)
{

    <PageTitle>Posts in @tag.Name</PageTitle>

    <h1 class="pb-3 pb-lg-4">@tag.Name</h1>

    @foreach (BlogPostDTO blogPost in posts.Data)
    {
        <BlogPostCard blogPost="blogPost" />
    }

    <div class="row gy-3 align-items-center mt-lg-5 pt-2 pt-md-4 pt-lg-0">

        @if (Page > 1)
        {
            <div class="col col-md-4 col-12 justify-content-end">
                <a class="btn btn-primary btn-sm w-md-auto w-100" href="@Nav.GetUriWithQueryParameter(nameof(Page), Page - 1)"><ai class="ai ai-arrow-left"></ai>Previous Page</a>
            </div>
        }

        <div class="col col-md-4 col-6">
            <span class="fw-bold">
                Page @posts.Page of @posts.TotalPages
            </span>
        </div>
        @if (Page < posts.TotalPages)
        {
            <div class="col col-md-4 col-12 justify-content-end">
                <a class="btn btn-primary btn-sm w-md-auto w-100" href="@Nav.GetUriWithQueryParameter(nameof(Page), Page + 1)"><ai class="ai ai-arrow-right"></ai>  Next Page</a>
            </div>
        }
    </div>

}

@code {
    [Parameter]
    public int TagId { get; set; }

    [SupplyParameterFromQuery]
    public int Page { get; set; }

    private int pageSize = 4;
    private BlogPostDTO blogPost = new BlogPostDTO();
    private PagedList<BlogPostDTO> posts = new PagedList<BlogPostDTO>();
    private TagDTO? tag;

    protected override async Task OnParametersSetAsync()
    {
        if (Page < 1) Page = 1;

        tag = await BlogPostService.GetTagByIdAsync(TagId);

        if (tag is null)
        {
            Nav.NavigateTo("/");
        }

        posts = await BlogPostService.GetPostsByTagIdAsync(TagId, Page, pageSize);
    }

}
